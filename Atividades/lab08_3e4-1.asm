.MODEL SMALL
.STACK 100H
.DATA
HEXA DB 0DH,0AH, 'DIGITE UM NUMERO HEXADECIMAL (MAX 4): $'
MSG DB 0DH,0AH, 'NUMERO DIGITADO FOI: $'
TABELA DB '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' ; DEFINE A TABELA DE TRADUÇÃO
.CODE
MAIN PROC
  
    MOV AX, @DATA
    MOV DS, AX

    MOV AH, 9
    LEA DX, HEXA
    INT 21H ;EXIBE A MENSAGEM  HEXA

   
    XOR BX, BX ; LIMPA BX
    MOV CL, 4 ; DEFINE O DESLOCAMENTO PARA 4 BITS

    MOV AH, 1
WILE:
    INT 21H ; LÊ UM CARACTERE

    CMP AL, 13   ; VERIFICA SE FOI PRESSIONADA A TECLA ENTER
    JE IMPRIME   ; SE SIM, VAI PARA A IMPRESSAO

    CMP AL, 57   ; SE AL FOR MAIOR QUE 9(57 ASCII), É UMA LETRA
    JA LETRA

    AND AL, 0FH   ; CONVERTE DE ASCII PARA VALOR NUMÉRICO(TIRA 30H)
    JMP DESLOCA

LETRA:
    SUB AL, 37H   ; CONVERTE DE HEXADECIMAL PARA VALORES NUMERICOS

DESLOCA:
    SHL BX, CL    ; DESLOCA BX PARA A ESQUERDA EM 4 BITS
    AND AL, 0FH  ;PREPARA AL(DEIXA APENAS OS PRIMEIROS 4 BITS)
    OR BL, AL     ; ARMAZENA O VALOR NO REGISTRADOR BX
    JMP WILE

IMPRIME:
   
    MOV AH, 9
    LEA DX, MSG
    INT 21H ; EXIBE A MENSAGEM

    MOV AH, 2

LOOP_IMPRIME:
   
    MOV DL, BH                  
    SHR DL, 4                   ;DESLOCA O DÍGITO HEXADECIMAL PARA A DIREITA 

    PUSH BX                     ;GUARDA VALOR DE BX NA PILHA

    LEA BX, TABELA              ;COLOCA OFFSET DO ENDEREÇO EM BX
    XCHG AL, DL                 ;TROCA CONTEÚDO DE AL E DL 
    XLAT                        ;CONVERTE CONTEÚDO DE AL PARA O VALOR CORRESPONDENTE NA TABELA
    XCHG AL, DL                 ;TROCA CONTEÚDO DE AL E DL

    POP BX                      ;RETORNA VALOR DE BX DA PILHA

    SHL BX, 4               ;DESLOCA BX 4 BITS PARA A ESQUERDA
    INT 21H                 ;IMPRIME CARACTERE ARMAZENADO EM DL
    LOOP LOOP_IMPRIME ; CONTINUA ATÉ QUE TODOS OS BITS TENHAM SIDO PROCESSADOS

    MOV AH, 4CH
    INT 21H

MAIN ENDP
END MAIN
